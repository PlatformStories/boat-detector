{
    "name": "boat-detector",
    "version": "0.0.2",
    "description": "A GBDX task that detects boats. Boats include ships, vessels, and all types of watercraft.",
    "properties": {
        "isPublic": true,
        "timeout": 18000
    },
    "inputPortDescriptors": [
        {
            "name": "ms_image",
            "type": "directory",
            "description": "Contains a 4/8-band multispectral image in geotiff format. This directory should only contain one image, otherwise a file is selected arbitrarily.",
            "required": true
        },
        {
            "name": "ps_image",
            "type": "directory",
            "description": "Contains the pansharpened counterpart of the multispectal image in geotiff format and EPSG:4326 projection. This directory should only contain one image, otherwise a file will be selected arbitrarily.",
            "required": true
        },
        {
            "name": "threshold",
            "type": "string",
            "description": "Decision threshold. Defaults to 0.5.",
            "required": false
        },
        {
            "name": "max_length",
            "type": "string",
            "description": "Maximum anomaly length in meters. Defaults to 1500.",
            "required": false
        },
        {
            "name": "min_length",
            "type": "string",
            "description": "Minimum anomaly length in meters. Defaults to 50.",
            "required": false
        },
        {
            "name": "max_width",
            "type": "string",
            "description": "Maximum anomaly width in meters. Defaults to 100.",
            "required": false
        },
        {
            "name": "min_width",
            "type": "string",
            "description": "Minimum anomaly width in meters. Defaults to 10.",
            "required": false
        }
    ],
    "outputPortDescriptors": [
        {
            "name": "results",
            "type": "directory",
            "description": "Contains a geojson with the boat bounding boxes."
        }
    ],
    "containerDescriptors": [
        {
            "type": "DOCKER",
            "properties": {
                "image": "tdgp/boat-detector",
                "domain": "nvidiagpu"
            },
            "command": "python /boat-detector.py",
            "isPublic": true
        }
    ]
}
